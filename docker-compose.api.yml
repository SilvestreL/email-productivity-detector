services:
  email-classifier-api:
    build: .
    container_name: email-classifier-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    volumes:
      # Volume para persistir o modelo treinado
      - model_data:/app/models
      # Volume para logs
      - ./logs:/app/logs
    restart: unless-stopped
    command: ["python", "src/api.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servi√ßo opcional para servir a interface HTML
  nginx-api:
    image: nginx:alpine
    container_name: email-classifier-nginx-api
    ports:
      - "80:80"
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
      - ./nginx.api.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - email-classifier-api
    restart: unless-stopped

volumes:
  model_data:
    driver: local
